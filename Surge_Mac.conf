[General]
# 跳过代理
skip-proxy = 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12, 127.0.0.1, localhost, *.local
# 使用自定义geoip数据库
geoip-maxmind-url = https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country-only-cn-private.mmdb
# 禁用geoip数据库自动更新
disable-geoip-db-auto-update = true
# 测试超时（秒）
test-timeout = 3
# 日志级别
loglevel = notify
# 启用HTTP远程控制仪表板
http-api-web-dashboard = true
# 强制HTTP引擎处理指定域名
force-http-engine-hosts = boxjs.com, boxjs.net, *.boxjs.com, *.boxjs.net, script.hub, *.script.hub
# Socks5监听地址
socks5-listen = 127.0.0.1:7890

[Proxy]
# 订阅链接
SUBSCRIBE, 订阅链接, DIRECT

[Proxy Group]
# 自动选择最佳代理节点
🚇自动策略 = select, DIRECT, REJECT, REJECT-TINYGIF, 🇭🇰香港策略, 🇨🇳台湾策略, 🇸🇬新加坡策略, 🇯🇵日本策略, 🇺🇸美国策略, 🇰🇷韩国策略, 🇬🇧英国策略
# 全局代理策略，包含所有代理节点
🏕全球策略 = select, include-all-proxies=1, policy-path=https://gist.githubusercontent.com/xiaomaoJT/921025f761277153bebb30abde7f784f/raw/XiaoMao-FE-Surge
# 各地区策略，基于地理位置的正则表达式筛选节点
🇭🇰香港策略 = url-test, policy-regex-filter=🇭🇰|HK|(?i)Hong.*, interval=600, tolerance=100
🇨🇳台湾策略 = url-test, policy-regex-filter=台|TW|(?i)Taiwan.*, interval=600, tolerance=100
🇸🇬新加坡策略 = url-test, policy-regex-filter=🇸🇬|SG|(?i)Singapore.*, interval=600, tolerance=100
🇯🇵日本策略 = url-test, policy-regex-filter=🇯🇵|JP|(?i)Japan.*, interval=600, tolerance=100
🇺🇸美国策略 = url-test, policy-regex-filter=🇺🇸|US|(?i)States|American.*, interval=600, tolerance=100
🇰🇷韩国策略 = url-test, policy-regex-filter=🇰🇷|KR|(?i)Korea.*, interval=600, tolerance=100
🇬🇧英国策略 = url-test, policy-regex-filter=🇬🇧|UK|(?i)Britain|United Kingdom.*, interval=600, tolerance=100

[Rule]
# 使用远程规则集，定期更新
RULE-SET, https://raw.githubusercontent.com/xiaomaoJT/QxScript/main/filter/ShuntCorrection-surge.list, DIRECT, update-interval=2592000
# 广告拦截规则
DOMAIN-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Advertising/Advertising_Domain.list, REJECT
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Advertising/Advertising.list, REJECT, update-interval=2592000
# 微信和腾讯直连
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/WeChat/WeChat.list, DIRECT, update-interval=2592000
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Tencent/Tencent.list, DIRECT, update-interval=2592000
#GPT
RULE-SET, https://whatshub.top/rule/ChatGPT.list, DIRECT, update-interval=2592000
#apple
RULE-SET,https://whatshub.top/rule/Apple.list, DIRECT, update-interval=2592000
#115
RULE-SET,https://whatshub.top/rule/115.list, DIRECT, update-interval=2592000
# 国内直连
GEOIP,CN,DIRECT
# 其余走自动策略
FINAL, 🚇自动策略

# Script Hub
Script Hub: 前端 = type=http-request,pattern=^https?:\/\/script\.hub\/($|edit\/|reload),requires-body=0,max-size=0,script-path=https://raw.githubusercontent.com/Script-Hub-Org/Script-Hub/main/script-hub.js,timeout=120
Script Hub: QX 转换 Surge = type=http-request,pattern=^https?:\/\/script\.hub\/file\/_start_\/.+type=qx-rewrite,requires-body=0,max-size=0,script-path=https://github.com/Script-Hub-Org/Script-Hub/raw/main/QX-Rewrite-Parser.js,timeout=120
Script Hub: Loon 转换 Surge = type=http-request,pattern=^https?:\/\/script\.hub\/file\/_start_\/.+type=loon-plugin,requires-body=0,max-size=0,script-path=https://github.com/Script-Hub-Org/Script-Hub/raw/main/Loon-Rewrite-Parser.js,timeout=120
Script Hub: Surge 模块控制器 = type=http-request,pattern=^https?:\/\/script\.hub\/file\/_start_\/.+type=surge-module,requires-body=0,max-size=0,script-path=https://github.com/Script-Hub-Org/Script-Hub/raw/main/Surge-Rewrite-Parser.js,timeout=120
Script Hub: 规则集转换 = type=http-request,pattern=^https?:\/\/script\.hub\/file\/_start_\/.+type=rule-set,requires-body=0,max-size=0,script-path=https://github.com/Script-Hub-Org/Script-Hub/raw/main/rule-parser.js,timeout=120
Script Hub: 脚本转换 = type=http-request,pattern=^https?:\/\/script\.hub\/convert\/,requires-body=0,max-size=0,script-path=https://raw.githubusercontent.com/Script-Hub-Org/Script-Hub/main/script-converter.js,timeout=120

# Sub-Store
Sub-Store Core = type=http-request,pattern=^https?:\/\/sub\.store\/((download)|api\/(preview|sync|(utils\/node-info))),script-path=https://github.com/sub-store-org/Sub-Store/releases/latest/download/sub-store-1.min.js,requires-body=true,timeout=120
Sub-Store Simple = type=http-request,pattern=^https?:\/\/sub\.store,script-path=https://github.com/sub-store-org/Sub-Store/releases/latest/download/sub-store-0.min.js,requires-body=true
Sub-Store Sync = type=cron,cronexp=0 0 * * *,wake-system=1,timeout=120,script-path=https://github.com/sub-store-org/Sub-Store/releases/latest/download/cron-sync-artifacts.min.js

# BoxJs
BoxJs = type=http-request,pattern=^https?:\/\/(.+\.)?boxjs\.(com|net),script-path=https://raw.githubusercontent.com/chavyleung/scripts/master/box/chavy.boxjs.js,requires-body=true,timeout=120


[MITM]
# 配置HTTPS中间人攻击（MITM）
skip-server-cert-verify = true
h2 = true
hostname = *.paddleapi.com, api.elpass.app, boxjs.com, boxjs.net, *.boxjs.com, *.boxjs.net, sub.store, script.hub, *.script.hub, api.coolapk.com
ca-passphrase = B601A630
ca-p12 = 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
